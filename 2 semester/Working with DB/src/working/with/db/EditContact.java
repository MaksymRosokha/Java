/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package working.with.db;

import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;

/**
 *
 * @author Maksim
 */
public class EditContact extends javax.swing.JFrame {

    private Connection conn = null;
    private Contact contact;
    private PhoneDirectory frmPhoneDirectory;
    private ViewContacts frmViewContacts;
    /**
     * Creates new form EditContact
     */
    public EditContact(PhoneDirectory frmPhoneDirectory, ViewContacts frmViewContacts) {
        initComponents();
        conn = ConnectorWithDatabase.getConn();
        this.frmPhoneDirectory = frmPhoneDirectory;
        this.frmViewContacts = frmViewContacts;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        txtNumber = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        lblNumber = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();

        setTitle("Змінити контакт");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlBackground.setBackground(new java.awt.Color(153, 255, 153));

        txtNumber.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        btnEdit.setBackground(new java.awt.Color(0, 204, 0));
        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnEdit.setText("Змінити");
        btnEdit.setBorderPainted(false);
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        txtName.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        lblNumber.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblNumber.setForeground(new java.awt.Color(0, 153, 0));
        lblNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNumber.setText("Номер:");

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblName.setForeground(new java.awt.Color(0, 153, 0));
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setText("Ім'я:");

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnEdit)
                .addGap(209, 209, 209))
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumber)
                    .addComponent(lblName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if(!checkInformation()){
            return;
        }
        if(editContact()){
            frmPhoneDirectory.setEnabled(true);
            frmViewContacts.downloadContacts();
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        frmPhoneDirectory.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    private boolean checkInformation(){
        if(txtName.getText().length() > 255){
            JOptionPane.showMessageDialog(rootPane, "Ім'я контакту не повинно бути більшим за 255 символів", "Помилка", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(txtName.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Ім'я контакту не повинно бути меншим за 1 символ", "Помилка", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(txtNumber.getText().length() > 15){
            JOptionPane.showMessageDialog(rootPane, "Номер не повинен бути більшим за 15 символів", "Помилка", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(txtNumber.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Номер не повинен бути меншим за 1 символ", "Помилка", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    public void setContact(Contact contact){
        this.contact = contact;
        txtNumber.setText(contact.getPhone());
        txtName.setText(contact.getName());
    }
    
    public boolean editContact(){
        String SQL = "UPDATE contacts_number SET phone = ?, name = ? WHERE id = " + contact.getId();
        PreparedStatement st = null;
        try{
            st = conn.prepareStatement(SQL);
            st.setString(1, txtNumber.getText());
            st.setString(2, txtName.getText());
        } catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane,"Помилка під час встановлення з'єднання з базою даних","Помилка",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try{
            int rez = st.executeUpdate();
            if(rez == 1){
                return true;
            }
            return false;
        } catch (Exception ex){
            JOptionPane.showMessageDialog(rootPane,"Не вдалося змінити контакт","Помилка",JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNumber;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumber;
    // End of variables declaration//GEN-END:variables
}
